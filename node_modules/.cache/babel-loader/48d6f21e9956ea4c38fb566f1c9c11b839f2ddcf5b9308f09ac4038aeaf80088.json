{"ast":null,"code":"var _jsxFileName = \"/Users/geunseonkim/react/rockpaperscissors/src/App.js\";\nimport Box from './component/Box';\nimport 유저주먹 from \"./assets/유저-주먹.jpg\";\nimport 유저보 from \"./assets/유저-보.jpg\";\nimport 유저가위 from \"./assets/유저-가위.jpg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst choice = {\n  rock: {\n    name: \"rock\",\n    img: 유저주먹\n  },\n  paper: {\n    name: \"paper\",\n    img: 유저보\n  },\n  scissor: {\n    name: \"scissor\",\n    img: 유저가위\n  }\n};\n\n// 1. 박스 두 개 만들기. (플레이어, 사진, 승패 결과)\n// 2. 유저는 박스 하단의 버튼을 볼 수 있다.\n// 3. 유저가 버튼을 클릭하면 클릭한 아이템이 유저 박스에 보인다.\n// 4. 유저가 버튼을 클릭하면 컴퓨터 아이템은 랜덤으로 선택된다.\n// 5. 3, 4번 아이템을 통해 승패 결과를 보여준다.\n// 6. 결과에 따라 박스 테두리의 색이 변한다. (이김: 초록, 짐: 빨강, 비김: 검정)\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-cover\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        name: \"\\uC720\\uC800\",\n        image: 유저보\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        name: \"\\uCEF4\\uD4E8\\uD130\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-cover\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: userChoice(\"가위\"),\n        children: \"\\uAC00\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: userChoice(\"가위\"),\n        children: \"\\uBC14\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: userChoice(\"가위\"),\n        children: \"\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","유저주먹","유저보","유저가위","jsxDEV","_jsxDEV","choice","rock","name","img","paper","scissor","App","children","className","image","fileName","_jsxFileName","lineNumber","columnNumber","onClick","userChoice","_c","$RefreshReg$"],"sources":["/Users/geunseonkim/react/rockpaperscissors/src/App.js"],"sourcesContent":["import Box from './component/Box';\nimport 유저주먹 from \"./assets/유저-주먹.jpg\";\nimport 유저보 from \"./assets/유저-보.jpg\";\nimport 유저가위 from \"./assets/유저-가위.jpg\";\nimport './App.css';\n\nconst choice = {\n  rock: {\n    name: \"rock\",\n    img: 유저주먹\n  },\n  paper: {\n    name: \"paper\",\n    img: 유저보\n  },\n  scissor: {\n    name: \"scissor\",\n    img: 유저가위\n  }\n};\n\n// 1. 박스 두 개 만들기. (플레이어, 사진, 승패 결과)\n// 2. 유저는 박스 하단의 버튼을 볼 수 있다.\n// 3. 유저가 버튼을 클릭하면 클릭한 아이템이 유저 박스에 보인다.\n// 4. 유저가 버튼을 클릭하면 컴퓨터 아이템은 랜덤으로 선택된다.\n// 5. 3, 4번 아이템을 통해 승패 결과를 보여준다.\n// 6. 결과에 따라 박스 테두리의 색이 변한다. (이김: 초록, 짐: 빨강, 비김: 검정)\nfunction App() {\n  return (\n    <div>\n      <div className=\"box-cover\">\n        <Box name=\"유저\" image={유저보}/>\n        <Box name=\"컴퓨터\"/>\n      </div>\n      <div className=\"box-cover\">\n        <button onClick={userChoice(\"가위\")}>가위</button>\n        <button onClick={userChoice(\"가위\")}>바위</button>\n        <button onClick={userChoice(\"가위\")}>보</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,iBAAiB;AACjC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,MAAM,GAAG;EACbC,IAAI,EAAE;IACJC,IAAI,EAAE,MAAM;IACZC,GAAG,EAAER;EACP,CAAC;EACDS,KAAK,EAAE;IACLF,IAAI,EAAE,OAAO;IACbC,GAAG,EAAEP;EACP,CAAC;EACDS,OAAO,EAAE;IACPH,IAAI,EAAE,SAAS;IACfC,GAAG,EAAEN;EACP;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,GAAGA,CAAA,EAAG;EACb,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAKS,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBR,OAAA,CAACL,GAAG;QAACQ,IAAI,EAAC,cAAI;QAACO,KAAK,EAAEb;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC5Bd,OAAA,CAACL,GAAG;QAACQ,IAAI,EAAC;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACNd,OAAA;MAAKS,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBR,OAAA;QAAQe,OAAO,EAAEC,UAAU,CAAC,IAAI,CAAE;QAAAR,QAAA,EAAC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9Cd,OAAA;QAAQe,OAAO,EAAEC,UAAU,CAAC,IAAI,CAAE;QAAAR,QAAA,EAAC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9Cd,OAAA;QAAQe,OAAO,EAAEC,UAAU,CAAC,IAAI,CAAE;QAAAR,QAAA,EAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACG,EAAA,GAdQV,GAAG;AAgBZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}