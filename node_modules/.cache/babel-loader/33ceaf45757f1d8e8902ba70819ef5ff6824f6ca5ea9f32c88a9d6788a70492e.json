{"ast":null,"code":"var _jsxFileName = \"/Users/geunseonkim/react/rockpaperscissors/src/App.js\",\n  _s = $RefreshSig$();\nimport Box from './component/Box';\nimport 유저주먹 from \"./assets/유저-주먹.jpg\";\nimport 유저보 from \"./assets/유저-보.jpg\";\nimport 유저가위 from \"./assets/유저-가위.jpg\";\nimport 컴퓨터주먹 from \"./assets/컴퓨터-주먹.jpg\";\nimport 컴퓨터보 from \"./assets/컴퓨터-보.jpg\";\nimport 컴퓨터가위 from \"./assets/컴퓨터-가위.jpg\";\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst choice = {\n  주먹: {\n    name: \"주먹\",\n    img: 유저주먹\n  },\n  보: {\n    name: \"보\",\n    img: 유저보\n  },\n  가위: {\n    name: \"가위\",\n    img: 유저가위\n  }\n};\n\n// 1. 박스 두 개 만들기. (플레이어, 사진, 승패 결과)\n// 2. 유저는 박스 하단의 버튼을 볼 수 있다.\n// 3. 유저가 버튼을 클릭하면 클릭한 아이템이 유저 박스에 보인다.\n// 4. 유저가 버튼을 클릭하면 컴퓨터 아이템은 랜덤으로 선택된다.\n// 5. 3, 4번 아이템을 통해 승패 결과를 보여준다.\n// 6. 결과에 따라 박스 테두리의 색이 변한다. (이김: 초록, 짐: 빨강, 비김: 검정)\nfunction App(props) {\n  _s();\n  const [userImage, setClickPlay] = useState(0);\n  const [computerImage, setAutoPlay] = useState(0);\n  const play = userChoice => {\n    setClickPlay(choice[userChoice]);\n    let randomNum = Math.floor(Math.random() * 10);\n    console.log(randomNum);\n    if (randomNum <= 3) {\n      setAutoPlay(컴퓨터주먹);\n    } else if (randomNum <= 6) {\n      setAutoPlay(컴퓨터보);\n    } else {\n      setAutoPlay(컴퓨터가위);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-cover\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        name: \"\\uC720\\uC800\",\n        image: userImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        name: \"\\uCEF4\\uD4E8\\uD130\",\n        image: computerImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-cover\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => play(\"주먹\"),\n        children: \"\\uC8FC\\uBA39\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => play(\"보\"),\n        children: \"\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => play(\"가위\"),\n        children: \"\\uAC00\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ahrDXCqs6mAVK5Hrdt5vP+o4Dmo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","유저주먹","유저보","유저가위","컴퓨터주먹","컴퓨터보","컴퓨터가위","useState","jsxDEV","_jsxDEV","choice","주먹","name","img","보","가위","App","props","_s","userImage","setClickPlay","computerImage","setAutoPlay","play","userChoice","randomNum","Math","floor","random","console","log","children","className","image","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/geunseonkim/react/rockpaperscissors/src/App.js"],"sourcesContent":["import Box from './component/Box';\nimport 유저주먹 from \"./assets/유저-주먹.jpg\";\nimport 유저보 from \"./assets/유저-보.jpg\";\nimport 유저가위 from \"./assets/유저-가위.jpg\";\nimport 컴퓨터주먹 from \"./assets/컴퓨터-주먹.jpg\";\nimport 컴퓨터보 from \"./assets/컴퓨터-보.jpg\";\nimport 컴퓨터가위 from \"./assets/컴퓨터-가위.jpg\";\nimport './App.css';\nimport { useState } from 'react';\n\nconst choice = {\n  주먹: {\n    name: \"주먹\",\n    img: 유저주먹\n  },\n  보: {\n    name: \"보\",\n    img: 유저보\n  },\n  가위: {\n    name: \"가위\",\n    img: 유저가위\n  }\n};\n\n// 1. 박스 두 개 만들기. (플레이어, 사진, 승패 결과)\n// 2. 유저는 박스 하단의 버튼을 볼 수 있다.\n// 3. 유저가 버튼을 클릭하면 클릭한 아이템이 유저 박스에 보인다.\n// 4. 유저가 버튼을 클릭하면 컴퓨터 아이템은 랜덤으로 선택된다.\n// 5. 3, 4번 아이템을 통해 승패 결과를 보여준다.\n// 6. 결과에 따라 박스 테두리의 색이 변한다. (이김: 초록, 짐: 빨강, 비김: 검정)\nfunction App(props) {\n  const [userImage, setClickPlay] = useState(0);\n  const [computerImage, setAutoPlay] = useState(0);\n  const play = (userChoice) => {\n    setClickPlay(choice[userChoice]);\n      let randomNum = Math.floor(Math.random()*10);\n      console.log(randomNum);\n      if (randomNum <= 3) {\n        setAutoPlay(컴퓨터주먹);\n      } else if (randomNum <= 6) {\n        setAutoPlay(컴퓨터보);\n      } else {\n        setAutoPlay(컴퓨터가위);\n      }\n    }\n  ;\n  return (\n    <div>\n      <div className=\"box-cover\">\n        <Box name=\"유저\" image={userImage}/>\n        <Box name=\"컴퓨터\" image={computerImage}/>\n      </div>\n      <div className=\"box-cover\">\n        <button onClick={() => play(\"주먹\")}>주먹</button>\n        <button onClick={() => play(\"보\")}>보</button>\n        <button onClick={() => play(\"가위\")}>가위</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}